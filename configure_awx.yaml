---
- name: Playbook for Using a Variety of Tower Modules
  hosts: localhost
  gather_facts: false
  vars_files: "./secrets.yaml"
  collections:
    - awx.awx
  tasks:
  - name: Add inventory
    tower_inventory:
      name: "COLABOT"
      description: "For CoLab"
      organization: "Default"
      state: present
  - name: Add host localhost
    tower_host:
      name: localhost
      description: "Local Host Group"
      inventory: "COLABOT"
      state: present
      variables:
        ansible_connection: local
        ansible_python_interpreter: python
  - name: Add host loginserver
    tower_host:
      name: '{{ login_server_hostname }}'
      description: "login server"
      inventory: "COLABOT"
      state: present
      variables:
        ansible_connection: ssh
        ansible_ssh_user: '{{ login_server_username }}'
        ansible_ssh_pass: '{{ login_server_password }}'
  - name: Add group login
    tower_group:
      name: login
      description: "Login Host Group"
      inventory: "COLABOT"
      state: present
      hosts:
        - '{{ login_server_hostname }}'
  - name: Add COLABOT account
    tower_user:
      username: "{{ colabot_username }}"
      password: "{{ colabot_password }}"
      email: "{{ colabot_email }}"
      state: present
  - name: Create Project COLABOT
    tower_project:
      name: "COLABOT"
      organization: "Default"
      scm_update_on_launch: no
      scm_type: git
      scm_url: https://github.com/ciscops/CoLab_playbooks.git
  - name: Add Account CML credential type
    tower_credential_type:
      name: Account CML
      description: Account CML
      kind: cloud
      inputs: "{{ lookup('file', 'credential_inputs_account_password.json') }}"
      injectors: "{{ {'extra_vars': {'cml_account': '{{ username }}', 'cml_password': '{{ password }}' }} }}"
      state: present
      validate_certs: false
  - name: Add CML credential
    tower_credential:
      name: CML Admin
      organization: Default
      state: present
      credential_type: Account CML
      inputs:
        username: "{{ cml_account }}"
        password: "{{ cml_password }}"
  - name: Add AWS credential
    tower_credential:
      name: COLABOT AWS
      organization: Default
      state: present
      kind: aws
      inputs:
        username: "{{ AWS_ACCESS_KEY_ID }}"
        password: "{{ AWS_SECRET_ACCESS_KEY }}"
  - name: Add AWS PROD credential type
    tower_credential_type:
      name: AWS PROD
      description: AWS PROD keys and region
      kind: cloud
      inputs: {"fields": [{"id": "aws_prod_key","type": "string","label": "aws_prod_key"},
                         { "id": "aws_prod_token","type": "string","label": "aws_prod_token", "secret": true},
                         { "id": "aws_prod_region","type": "string","label": "aws_prod_region"}],
               "required": ["aws_prod_key", "aws_prod_token", "aws_prod_region"]}
      injectors: "{{ {'extra_vars': {'aws_prod_key_vault': '{{ aws_prod_key }}', 'aws_prod_token_vault': '{{ aws_prod_token }}', 'aws_prod_region_vault': '{{ aws_prod_region }}'}} }}"
      state: present
      validate_certs: false
  - name: Add AWS PROD credentials
    tower_credential:
      name: COLABOT AWS PROD
      organization: Default
      state: present
      credential_type: AWS PROD
      inputs:
        aws_prod_key: "{{ AWS_ACCESS_KEY_ID_PROD }}"
        aws_prod_token: "{{ AWS_SECRET_ACCESS_KEY_PROD }}"
        aws_prod_region: "{{ AWS_REGION_PROD }}"
  - name: Add AWS Group credential type
    tower_credential_type:
      name: AWS Group
      description: AWS Group
      kind: cloud
      inputs: {"fields": [{"id": "aws_group","type": "string","label": "aws_group"}], "required": ["aws_group"]}
      injectors: "{{ {'extra_vars': {'aws_iam_group_vault': '{{ aws_group }}' }} }}"
      state: present
      validate_certs: false
  - name: Add AWS Group credential
    tower_credential:
      name: AWS Group
      organization: Default
      state: present
      credential_type: AWS Group
      inputs:
        aws_group: "{{ aws_iam_group }}"
  - name: Add COLABot Cipher credential type
    tower_credential_type:
      name: COLABOT Cipher
      description: COLABOT Cipher
      kind: cloud
      inputs: {"fields": [{"id": "cipher","type": "string","label": "cipher",
                           "secret": true}], "required": ["cipher"]}
      injectors: "{{ {'extra_vars': {'cipher_vault': '{{ cipher }}' }} }}"
      state: present
      validate_certs: false
  - name: Add COLABot Cipher credential
    tower_credential:
      name: COLABot Cipher
      organization: Default
      state: present
      credential_type: COLABOT Cipher
      inputs:
        cipher: "{{ colabot_cipher }}"
  - name: Add WxT credential type
    tower_credential_type:
      name: WxT token
      description: WxT token
      kind: cloud
      inputs: {"fields": [{"id": "wxt_token","type": "string","label": "wxt_token",
                           "secret": true}], "required": ["wxt_token"]}
      injectors: "{{ {'extra_vars': {'wxt_bearer_vault': '{{ wxt_token }}' }} }}"
      state: present
      validate_certs: false
  - name: Add COLABOT PROD credential
    tower_credential:
      name: COLABOT PROD
      organization: Default
      state: present
      credential_type: WxT token
      inputs:
        wxt_token: "{{ colabot_prod_wxt }}"
  - name: Add COLABOT DEV credential
    tower_credential:
      name: COLABOT DEV
      organization: Default
      state: present
      credential_type: WxT token
      inputs:
        wxt_token: "{{ colabot_dev_wxt }}"
  - name: Add vCenter credential type
    tower_credential_type:
      name: Account vCenter
      description: Account vCenter
      kind: cloud
      inputs: "{{ lookup('file', 'credential_inputs_account_password_group.json') }}"
      injectors: "{{ {'extra_vars': {'vcenter_admin_account_vault': '{{ username }}', 'vcenter_admin_password_vault': '{{ password }}', 'vcenter_sso_group_vault': '{{ group }}' }} }}"
      state: present
      validate_certs: false
  - name: Add vCenter credential
    tower_credential:
      name: COLAB vCenter
      organization: Default
      state: present
      credential_type: Account vCenter
      inputs:
        username: "{{ vcenter_admin_account }}"
        password: "{{ vcenter_admin_password }}"
        group: "{{ vcenter_sso_group }}"
  - name: Add Meraki credential type
    tower_credential_type:
      name: Account Meraki
      description: Account Meraki
      kind: cloud
      inputs: "{{ lookup('file', 'credential_inputs_account_password.json') }}"
      injectors: "{{ {'extra_vars': {'meraki_netid_vault': '{{ username }}', 'meraki_auth_vault': '{{ password }}' }} }}"
      state: present
      validate_certs: false
  - name: Add Meraki credential
    tower_credential:
      name: COLAB Meraki
      organization: Default
      state: present
      credential_type: Account Meraki
      inputs:
        username: "{{ meraki_netid_vault }}"
        password: "{{ meraki_auth_vault }}"
  - name: Create job add_base_accounts_and_reset_passwords Dev
    tower_job_template:
      name: "add_base_accounts_and_reset_passwords_dev"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "add_base_accounts_and_reset_passwords.yaml"
      credentials:
        - "CML Admin"
        - "COLAB Meraki"
        - "COLABOT AWS"
        - "COLABOT DEV"
        - "COLAB vCenter"
        - "COLABOT AWS PROD"
        - "COLABot Cipher"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'cml_admin_account': '{{ cml_account }}',
        'cml_admin_password': '{{ cml_password }}',
        'meraki_key': '{{ meraki_auth_vault }}',
        'networkId': '{{ meraki_netid_vault }}',
        'wxt_bearer': '{{ wxt_bearer_vault }}',
        'colabot_cipher': '{{ cipher_vault }}',
        'vcenter_user_group': '{{ vcenter_sso_group_vault }}',
        'vcenter_admin_username': '{{ vcenter_admin_account_vault }}',
        'vcenter_admin_password': '{{ vcenter_admin_password_vault }}',
        'aws_access_key': '{{ lookup(\"env\",\"AWS_ACCESS_KEY_ID\") }}',
        'aws_secret_key': '{{ lookup(\"env\",\"AWS_SECRET_ACCESS_KEY\") }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job add_aws_and_reset_passwords Dev
    tower_job_template:
      name: "add_aws_and_reset_passwords_dev"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "add_aws_and_reset_passwords.yaml"
      credentials:
        - "CML Admin"
        - "COLAB Meraki"
        - "COLABOT AWS"
        - "COLABOT DEV"
        - "COLAB vCenter"
        - "AWS Group"
        - "COLABOT AWS PROD"
        - "COLABot Cipher"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'cml_admin_account': '{{ cml_account }}',
        'cml_admin_password': '{{ cml_password }}',
        'meraki_key': '{{ meraki_auth_vault }}',
        'networkId': '{{ meraki_netid_vault }}',
        'wxt_bearer': '{{ wxt_bearer_vault }}',
        'colabot_cipher': '{{ cipher_vault }}',
        'vcenter_user_group': '{{ vcenter_sso_group_vault }}',
        'vcenter_admin_username': '{{ vcenter_admin_account_vault }}',
        'vcenter_admin_password': '{{ vcenter_admin_password_vault }}',
        'iam_group': '{{ aws_iam_group_vault }}',
        'aws_access_key': '{{ lookup(\"env\",\"AWS_ACCESS_KEY_ID\") }}',
        'aws_secret_key': '{{ lookup(\"env\",\"AWS_SECRET_ACCESS_KEY\") }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job add_vpn_and_reset_passwords Dev
    tower_job_template:
      name: "add_vpn_and_reset_passwords_dev"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "add_vpn_and_reset_passwords.yaml"
      credentials:
        - "CML Admin"
        - "COLAB Meraki"
        - "COLABOT AWS"
        - "COLABOT DEV"
        - "COLAB vCenter"
        - "COLABOT AWS PROD"
        - "COLABot Cipher"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'cml_admin_account': '{{ cml_account }}',
        'cml_admin_password': '{{ cml_password }}',
        'meraki_key': '{{ meraki_auth_vault }}',
        'networkId': '{{ meraki_netid_vault }}',
        'wxt_bearer': '{{ wxt_bearer_vault }}',
        'colabot_cipher': '{{ cipher_vault }}',
        'vcenter_user_group': '{{ vcenter_sso_group_vault }}',
        'vcenter_admin_username': '{{ vcenter_admin_account_vault }}',
        'vcenter_admin_password': '{{ vcenter_admin_password_vault }}',
        'aws_access_key': '{{ lookup(\"env\",\"AWS_ACCESS_KEY_ID\") }}',
        'aws_secret_key': '{{ lookup(\"env\",\"AWS_SECRET_ACCESS_KEY\") }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job delete_all_accounts Dev
    tower_job_template:
      name: "delete_all_accounts_dev"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "delete_all_accounts.yaml"
      credentials:
        - "CML Admin"
        - "COLAB Meraki"
        - "COLABOT AWS"
        - "COLABOT DEV"
        - "COLAB vCenter"
        - "COLABOT AWS PROD"
        - "Kubernetes"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'cml_admin_account': '{{ cml_account }}',
        'kubeconfig': '{{ kubeconfig_from_vault }}',
        'cml_admin_password': '{{ cml_password }}',
        'meraki_key': '{{ meraki_auth_vault }}',
        'networkId': '{{ meraki_netid_vault }}',
        'wxt_bearer': '{{ wxt_bearer_vault }}',
        'vcenter_admin_username': '{{ vcenter_admin_account_vault }}',
        'vcenter_admin_password': '{{ vcenter_admin_password_vault }}',
        'aws_access_key': '{{ lookup(\"env\",\"AWS_ACCESS_KEY_ID\") }}',
        'aws_secret_key': '{{ lookup(\"env\",\"AWS_SECRET_ACCESS_KEY\") }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job add_base_accounts_and_reset_passwords Prod
    tower_job_template:
      name: "add_base_accounts_and_reset_passwords_prod"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "add_base_accounts_and_reset_passwords.yaml"
      credentials:
        - "CML Admin"
        - "COLAB Meraki"
        - "COLABOT AWS"
        - "COLABOT PROD"
        - "COLAB vCenter"
        - "COLABOT AWS PROD"
        - "COLABot Cipher"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'cml_admin_account': '{{ cml_account }}',
        'cml_admin_password': '{{ cml_password }}',
        'meraki_key': '{{ meraki_auth_vault }}',
        'networkId': '{{ meraki_netid_vault }}',
        'wxt_bearer': '{{ wxt_bearer_vault }}',
        'colabot_cipher': '{{ cipher_vault }}',
        'vcenter_user_group': '{{ vcenter_sso_group_vault }}',
        'vcenter_admin_username': '{{ vcenter_admin_account_vault }}',
        'vcenter_admin_password': '{{ vcenter_admin_password_vault }}',
        'aws_access_key': '{{ lookup(\"env\",\"AWS_ACCESS_KEY_ID\") }}',
        'aws_secret_key': '{{ lookup(\"env\",\"AWS_SECRET_ACCESS_KEY\") }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job add_aws_and_reset_passwords Prod
    tower_job_template:
      name: "add_aws_and_reset_passwords_prod"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "add_aws_and_reset_passwords.yaml"
      credentials:
        - "CML Admin"
        - "COLAB Meraki"
        - "COLABOT AWS"
        - "COLABOT PROD"
        - "COLAB vCenter"
        - "AWS Group"
        - "COLABOT AWS PROD"
        - "COLABot Cipher"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'cml_admin_account': '{{ cml_account }}',
        'cml_admin_password': '{{ cml_password }}',
        'meraki_key': '{{ meraki_auth_vault }}',
        'networkId': '{{ meraki_netid_vault }}',
        'wxt_bearer': '{{ wxt_bearer_vault }}',
        'colabot_cipher': '{{ cipher_vault }}',
        'vcenter_user_group': '{{ vcenter_sso_group_vault }}',
        'vcenter_admin_username': '{{ vcenter_admin_account_vault }}',
        'vcenter_admin_password': '{{ vcenter_admin_password_vault }}',
        'iam_group': '{{ aws_iam_group_vault }}',
        'aws_access_key': '{{ lookup(\"env\",\"AWS_ACCESS_KEY_ID\") }}',
        'aws_secret_key': '{{ lookup(\"env\",\"AWS_SECRET_ACCESS_KEY\") }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job add_vpn_and_reset_passwords Prod
    tower_job_template:
      name: "add_vpn_and_reset_passwords_prod"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "add_vpn_and_reset_passwords.yaml"
      credentials:
        - "CML Admin"
        - "COLAB Meraki"
        - "COLABOT AWS"
        - "COLABOT PROD"
        - "COLAB vCenter"
        - "COLABOT AWS PROD"
        - "COLABot Cipher"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'cml_admin_account': '{{ cml_account }}',
        'cml_admin_password': '{{ cml_password }}',
        'meraki_key': '{{ meraki_auth_vault }}',
        'networkId': '{{ meraki_netid_vault }}',
        'wxt_bearer': '{{ wxt_bearer_vault }}',
        'colabot_cipher': '{{ cipher_vault }}',
        'vcenter_user_group': '{{ vcenter_sso_group_vault }}',
        'vcenter_admin_username': '{{ vcenter_admin_account_vault }}',
        'vcenter_admin_password': '{{ vcenter_admin_password_vault }}',
        'aws_access_key': '{{ lookup(\"env\",\"AWS_ACCESS_KEY_ID\") }}',
        'aws_secret_key': '{{ lookup(\"env\",\"AWS_SECRET_ACCESS_KEY\") }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job delete_all_accounts Prod
    tower_job_template:
      name: "delete_all_accounts_prod"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "delete_all_accounts.yaml"
      credentials:
        - "CML Admin"
        - "COLAB Meraki"
        - "COLABOT AWS"
        - "COLABOT PROD"
        - "COLAB vCenter"
        - "COLABOT AWS PROD"
        - "Kubernetes"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'cml_admin_account': '{{ cml_account }}',
        'kubeconfig': '{{ kubeconfig_from_vault }}',
        'cml_admin_password': '{{ cml_password }}',
        'meraki_key': '{{ meraki_auth_vault }}',
        'networkId': '{{ meraki_netid_vault }}',
        'wxt_bearer': '{{ wxt_bearer_vault }}',
        'vcenter_admin_username': '{{ vcenter_admin_account_vault }}',
        'vcenter_admin_password': '{{ vcenter_admin_password_vault }}',
        'aws_access_key': '{{ lookup(\"env\",\"AWS_ACCESS_KEY_ID\") }}',
        'aws_secret_key': '{{ lookup(\"env\",\"AWS_SECRET_ACCESS_KEY\") }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Install python package
    pip:
      name:  openshift
  - name: Add kubeconfig credential type
    tower_credential_type:
      name: KUBECONFIG
      description: KUBECONFIG
      kind: cloud
      inputs: "{{ lookup('file', 'credential_inputs_kubeconfig.json') }}"
      injectors: "{{ {'extra_vars': {'kubeconfig_from_vault': '{{ file }}'}} }}"
      state: present
      validate_certs: false
  - name: Kubernetes credential
    tower_credential:
      name: Kubernetes
      organization: Default
      state: present
      credential_type: KUBECONFIG
      inputs:
        file: "{{ kubeconfig_from_file }}"
  - name: Create job deploy_gitlab Prod
    tower_job_template:
      name: "deploy_gitlab_prod"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "deploy_gitlab.yaml"
      credentials:
        - "COLABOT PROD"
        - "Kubernetes"
        - "COLABOT AWS PROD"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'wxt_bearer': '{{ wxt_bearer_vault }}',
        'kubeconfig': '{{ kubeconfig_from_vault }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job extend_gitlab Prod
    tower_job_template:
      name: "extend_gitlab_prod"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "extend_gitlab.yaml"
      credentials:
        - "COLABOT PROD"
        - "COLABOT AWS PROD"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'wxt_bearer': '{{ wxt_bearer_vault }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job deploy_gitlab Dev
    tower_job_template:
      name: "deploy_gitlab_dev"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "deploy_gitlab.yaml"
      credentials:
        - "COLABOT DEV"
        - "Kubernetes"
        - "COLABOT AWS PROD"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'wxt_bearer': '{{ wxt_bearer_vault }}',
        'kubeconfig': '{{ kubeconfig_from_vault }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job remove_gitlab Prod
    tower_job_template:
      name: "remove_gitlab_prod"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "remove_gitlab.yaml"
      credentials:
        - "COLABOT PROD"
        - "Kubernetes"
        - "COLABOT AWS PROD"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'wxt_bearer': '{{ wxt_bearer_vault }}',
        'kubeconfig': '{{ kubeconfig_from_vault }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"
  - name: Create job remove_gitlab Dev
    tower_job_template:
      name: "remove_gitlab_dev"
      job_type: "run"
      organization: "Default"
      inventory: "COLABOT"
      project: "COLABOT"
      playbook: "remove_gitlab.yaml"
      credentials:
        - "COLABOT DEV"
        - "Kubernetes"
        - "COLABOT AWS PROD"
      state: "present"
      ask_variables_on_launch: yes
      concurrent_jobs_enabled: yes
      extra_vars:
        "{{ {'wxt_bearer': '{{ wxt_bearer_vault }}',
        'kubeconfig': '{{ kubeconfig_from_vault }}',
        'aws_access_key_prod': '{{ aws_prod_key_vault }}',
        'aws_secret_key_prod': '{{ aws_prod_token_vault }}',
        'aws_region_prod': '{{ aws_prod_region_vault }}'} }}"